{"version":3,"sources":["webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue?766e","webpack:///src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue?45b7","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/index.js","webpack:///./src/layouts/InterfaceLayout/containers/SwapContainer/SwapContainer.vue?e9e9"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","bityExitToFiat","expression","ref","attrs","selected-provider","selectedProvider","swap-details","swapDetails","current-address","currentAddress","on","swapStarted","resetSwapState","title","$t","_v","_s","tokenBalances","fromCurrency","click","swapAll","_e","currencies","fromArray","override-currency","overrideFrom","from-source","page","selectedCurrency","setFromCurrency","type","step","placeholder","domProps","input","$event","target","composing","fromValue","amountChanged","fromBelowMinAllowed","hasEnough","fromAboveMaxAllowed","flipCurrencies","src","images","swap","toArray","overrideTo","setToCurrency","toValue","toBelowMinAllowed","toAboveMaxAllowed","isExitToFiat","currency","toCurrency","copybutton","toAddress","setToAddress","validAddress","unableToValidate","baseCurrency","setExitFromAddress","validExitAddress","unableToValidateExit","setRefundAddress","validRefundAddress","unableToValidateRefund","loading-provider-error","loadingError","loading-provider-rates","haveProviderRates","provider-data","providerList","from-value","to-value","no-providers-pair","noProvidersPair","loading-data","loadingData","providers-found","providersFound","provider-selected","switch-currency-order","switchCurrencyOrder","all-supported-providers","supportedProviders","setSelectedProvider","finalizingSwap","class","validSwap","swapConfirmationModalOpen","aria-hidden","link-text","question","link","exit-from-address","exitSourceAddress","exit-to-fiat-callback","exitToFiatCallback","backButtonClick","exitToFiatAbort","staticRenderFns","errorLogger","browser_default","SwapContainervue_type_script_lang_js_","components","interface-bottom-text","InterfaceBottomText","interface-container-title","InterfaceContainerTitle","swap-currency-picker","SwapCurrencyPicker","drop-down-address-selector","SwapAddressSelector","providers-radio-selector","ProvidersRadioSelector","swap-confirmation-modal","SwapConfirmationModal","swap-exit-to-fiat","SwapExitToFiat","swap-send-form","swap-send-to-modal","SwapSendToModal","props","tokensWithBalance","Array","default","data","partners","refundAddress","exitFromAddress","displayToValue","displayFromValue","invalidFrom","lastBestRate","currencyDetails","network","$store","state","web3","getRateForUnit","kybernetowrk","kybernetwork_default","a","bity","bity_default","visaMaster","visamaster_default","swap_default","providerData","providerRatesRecieved","tempStatuses","providerNames","fiatCurrenciesArray","map","entry","symbol","ratesRetrived","issueRecievingRates","debounceUpdateEstimate","debounceDoThing","computed","Object","objectSpread","vuex_esm","bestRate","_this","length","provider","find","rate","toConsumableArray","e","bignumber_default","gt","concat","minValue","maxValue","checkBityMax","gte","includes","canExit","allAddressesValid","isProvider","getProvider","maxCheck","showRefundAddress","isToken","changelly","validBaseToAddress","checkAddress","enteredVal","convertToTokenWei","_enteredVal","account","balance","watch","_watch","defineProperty","updateNetwork","_this$swap$initialCur","initialCurrencyLists","_this$swap$buildIniti","buildInitialCurrencyArrays","updateRateEstimate","newVal","mounted","_this$swap$initialCur2","address","utils","_","debounce","updateEstimate","debounceReviseRateEstimate","methods","reset","origTo","to","from","convertToTokenBase","dir","arguments","undefined","getBalance","setToCurrencyBuilder","setFromCurrencyBuilder","_getBalance","asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","eth","Contract","getTokenAddress","balanceOf","call","sent","$set","stop","_x","apply","direction","simplex","fiat","fromCur","toCur","fromVal","_updateEstimate","_callee2","simplexProvider","simplexRateDetails","_rate","_context2","simplexUpdate","abrupt","t0","calculateFromValue","calculateToValue","canQuote","updateDigital","updateFiat","div","toString","_x2","_updateRateEstimate","_callee3","_ref","callsToMake","results","_this2","_context3","Promise","all","func","every","computeConversion","_fromValue","times","toFixed","_x3","_x4","_x5","_x6","_swapConfirmationModalOpen","_callee4","providerDetails","_this3","_context4","fromAddress","startSwap","swapDetailsExit","openConfirmModal","message","$refs","swapConfirmation","swapconfirmation","hide","swapSendTo","helpers","responseHandler","dataForInitialization","maybeToken","show","Error","SwapContainer_SwapContainervue_type_script_lang_js_","component","componentNormalizer","SwapContainer","__webpack_require__","d","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SwapContainer_vue_vue_type_style_index_0_id_09dd4c53_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SwapContainer_vue_vue_type_style_index_0_id_09dd4c53_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"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","file":"js/chunk-466b8e24.89eb496c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"swap-container\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.bityExitToFiat),expression:\"!bityExitToFiat\"}]},[_c('swap-confirmation-modal',{ref:\"swapConfirmation\",attrs:{\"selected-provider\":_vm.selectedProvider,\"swap-details\":_vm.swapDetails,\"current-address\":_vm.currentAddress},on:{\"swapStarted\":_vm.resetSwapState}}),_c('swap-send-to-modal',{ref:\"swapSendTo\",attrs:{\"selected-provider\":_vm.selectedProvider,\"swap-details\":_vm.swapDetails,\"current-address\":_vm.currentAddress},on:{\"swapStarted\":_vm.resetSwapState}}),_c('div',{staticClass:\"title-block\"},[_c('interface-container-title',{attrs:{\"title\":_vm.$t('common.swap')}})],1),_c('div',{staticClass:\"form-content-container\"},[_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"form-block amount-to-address\"},[_c('div',{staticClass:\"amount\"},[_c('div',{staticClass:\"title title-and-copy\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('common.from')))]),(_vm.tokenBalances[_vm.fromCurrency] > 0)?_c('p',{staticClass:\"all-button prevent-user-select\",on:{\"click\":_vm.swapAll}},[_vm._v(\"\\n                \"+_vm._s(_vm.$t('common.totalBalance'))+\"\\n              \")]):_vm._e()]),_c('swap-currency-picker',{attrs:{\"currencies\":_vm.fromArray,\"override-currency\":_vm.overrideFrom,\"from-source\":true,\"page\":\"SwapContainerFrom\"},on:{\"selectedCurrency\":_vm.setFromCurrency}}),_c('div',{staticClass:\"the-form amount-number\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.fromValue),expression:\"fromValue\"}],attrs:{\"type\":\"number\",\"name\":\"\",\"value\":\"\",\"step\":\"any\",\"placeholder\":\"Deposit Amount\"},domProps:{\"value\":(_vm.fromValue)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.fromValue=$event.target.value},function($event){return _vm.amountChanged('from')}]}})]),_c('div',{staticClass:\"error-message-container\"},[(_vm.fromBelowMinAllowed)?_c('p',[_vm._v(_vm._s(_vm.fromBelowMinAllowed))]):_vm._e(),(!_vm.hasEnough && !_vm.fromBelowMinAllowed)?_c('p',[_vm._v(\"\\n                \"+_vm._s(_vm.$t('common.dontHaveEnough'))+\"\\n              \")]):_vm._e(),(_vm.fromAboveMaxAllowed)?_c('p',[_vm._v(_vm._s(_vm.fromAboveMaxAllowed))]):_vm._e()])],1),_c('div',{staticClass:\"exchange-icon\",on:{\"click\":_vm.flipCurrencies}},[_c('img',{attrs:{\"src\":_vm.images.swap}})]),_c('div',{staticClass:\"amount\"},[_c('div',{staticClass:\"title\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('common.to')))])]),_c('swap-currency-picker',{attrs:{\"currencies\":_vm.toArray,\"override-currency\":_vm.overrideTo,\"from-source\":false,\"page\":\"SwapContainerTo\"},on:{\"selectedCurrency\":_vm.setToCurrency}}),_c('div',{staticClass:\"the-form amount-number\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.toValue),expression:\"toValue\"}],attrs:{\"type\":\"number\",\"name\":\"\",\"value\":\"\",\"step\":\"any\",\"placeholder\":\"Received Amount\"},domProps:{\"value\":(_vm.toValue)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.toValue=$event.target.value},function($event){return _vm.amountChanged('to')}]}})]),_c('div',{staticClass:\"error-message-container\"},[(_vm.toBelowMinAllowed)?_c('p',[_vm._v(_vm._s(_vm.toBelowMinAllowed))]):_vm._e(),(_vm.toAboveMaxAllowed)?_c('p',[_vm._v(_vm._s(_vm.toAboveMaxAllowed))]):_vm._e()])],1)])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isExitToFiat),expression:\"!isExitToFiat\"}],staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('drop-down-address-selector',{attrs:{\"currency\":_vm.toCurrency,\"current-address\":_vm.currentAddress,\"copybutton\":true,\"title\":_vm.$t('common.toAddress')},on:{\"toAddress\":_vm.setToAddress,\"validAddress\":function($event){_vm.validAddress = $event},\"unableToValidate\":function($event){_vm.unableToValidate = $event}}})],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.validAddress),expression:\"!validAddress\"}],staticClass:\"error-message-container\"},[_c('p',[_vm._v(_vm._s(_vm.$t('interface.notValidAddr', { currency: _vm.toCurrency })))])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.unableToValidate),expression:\"unableToValidate\"}],staticClass:\"warn-message-container\"},[_c('p',[_vm._v(\"\\n            \"+_vm._s(_vm.$t('interface.unableToValidateAddress', {\n                currency: _vm.toCurrency\n              }))+\"\\n          \")])])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isExitToFiat && _vm.fromCurrency !== _vm.baseCurrency),expression:\"isExitToFiat && fromCurrency !== baseCurrency\"}],staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('drop-down-address-selector',{attrs:{\"currency\":_vm.fromCurrency,\"current-address\":_vm.currentAddress,\"copybutton\":true,\"title\":_vm.$t('interface.fromAddr')},on:{\"toAddress\":_vm.setExitFromAddress,\"validAddress\":function($event){_vm.validExitAddress = $event},\"unableToValidate\":function($event){_vm.unableToValidateExit = $event}}})],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.validExitAddress),expression:\"!validExitAddress\"}],staticClass:\"error-message-container\"},[_c('p',[_vm._v(\"\\n            \"+_vm._s(_vm.$t('interface.notValidAddrSrc', { currency: _vm.fromCurrency }))+\"\\n          \")])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.unableToValidateExit),expression:\"unableToValidateExit\"}],staticClass:\"warn-message-container\"},[_c('p',[_vm._v(\"\\n            \"+_vm._s(_vm.$t('interface.unableToValidateAddress', {\n                currency: _vm.toCurrency\n              }))+\"\\n          \")])])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showRefundAddress),expression:\"showRefundAddress\"}],staticClass:\"send-form\"},[_c('div',{staticClass:\"the-form gas-amount\"},[_c('drop-down-address-selector',{attrs:{\"currency\":_vm.fromCurrency,\"current-address\":_vm.currentAddress,\"copybutton\":true,\"title\":_vm.$t('interface.refund', { currency: _vm.fromCurrency })},on:{\"toAddress\":_vm.setRefundAddress,\"validAddress\":function($event){_vm.validRefundAddress = $event},\"unableToValidate\":function($event){_vm.unableToValidateRefund = $event}}})],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.validRefundAddress),expression:\"!validRefundAddress\"}],staticClass:\"error-message-container\"},[_c('p',[_vm._v(\"\\n            \"+_vm._s(_vm.$t('interface.notValidAddr', { currency: _vm.fromCurrency }))+\"\\n          \")])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.unableToValidateRefund),expression:\"unableToValidateRefund\"}],staticClass:\"warn-message-container\"},[_c('p',[_vm._v(\"\\n            \"+_vm._s(_vm.$t('interface.unableToValidateAddress', {\n                currency: _vm.toCurrency\n              }))+\"\\n          \")])])]),_c('div',{staticClass:\"send-form\"},[_c('div',{staticClass:\"title-container\"},[_c('div',{staticClass:\"title title-and-copy\"},[_c('h4',[_vm._v(_vm._s(_vm.$t('interface.providers')))])])]),_c('providers-radio-selector',{attrs:{\"loading-provider-error\":_vm.loadingError,\"loading-provider-rates\":!_vm.haveProviderRates,\"provider-data\":_vm.providerList,\"from-value\":+_vm.fromValue,\"to-value\":+_vm.toValue,\"no-providers-pair\":_vm.noProvidersPair,\"loading-data\":_vm.loadingData,\"providers-found\":_vm.providersFound,\"provider-selected\":_vm.selectedProvider,\"switch-currency-order\":_vm.switchCurrencyOrder,\"all-supported-providers\":_vm.supportedProviders},on:{\"selectedProvider\":_vm.setSelectedProvider}})],1),_c('div',{staticClass:\"submit-button-container\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.finalizingSwap),expression:\"finalizingSwap\"}],staticClass:\"disabled submit-button large-round-button-green-filled clickable\"},[_c('i',{staticClass:\"fa fa-spinner fa-spin\"}),_vm._v(\"\\n          \"+_vm._s(_vm.$t('interface.swapButtonLoading'))+\"\\n        \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.finalizingSwap),expression:\"!finalizingSwap\"}],class:[\n            _vm.validSwap ? '' : 'disabled',\n            'submit-button large-round-button-green-filled clickable'\n          ],on:{\"click\":_vm.swapConfirmationModalOpen}},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('common.continue'))+\"\\n          \"),_c('i',{staticClass:\"fa fa-long-arrow-right\",attrs:{\"aria-hidden\":\"true\"}})]),_c('interface-bottom-text',{attrs:{\"link-text\":_vm.$t('interface.helpCenter'),\"question\":_vm.$t('interface.haveIssues'),\"link\":\"https://kb.myetherwallet.com\"}})],1)])],1),(_vm.bityExitToFiat)?_c('swap-exit-to-fiat',{attrs:{\"swap-details\":_vm.swapDetails,\"exit-from-address\":_vm.exitSourceAddress,\"exit-to-fiat-callback\":_vm.exitToFiatCallback},on:{\"backButtonClick\":_vm.exitToFiatAbort}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"swap-container\">\n    <div v-show=\"!bityExitToFiat\">\n      <swap-confirmation-modal\n        ref=\"swapConfirmation\"\n        :selected-provider=\"selectedProvider\"\n        :swap-details=\"swapDetails\"\n        :current-address=\"currentAddress\"\n        @swapStarted=\"resetSwapState\"\n      />\n\n      <swap-send-to-modal\n        ref=\"swapSendTo\"\n        :selected-provider=\"selectedProvider\"\n        :swap-details=\"swapDetails\"\n        :current-address=\"currentAddress\"\n        @swapStarted=\"resetSwapState\"\n      />\n\n      <div class=\"title-block\">\n        <interface-container-title :title=\"$t('common.swap')\" />\n      </div>\n\n      <div class=\"form-content-container\">\n        <div class=\"send-form\">\n          <div class=\"form-block amount-to-address\">\n            <div class=\"amount\">\n              <div class=\"title title-and-copy\">\n                <h4>{{ $t('common.from') }}</h4>\n                <p\n                  v-if=\"tokenBalances[fromCurrency] > 0\"\n                  class=\"all-button prevent-user-select\"\n                  @click=\"swapAll\"\n                >\n                  {{ $t('common.totalBalance') }}\n                </p>\n              </div>\n              <swap-currency-picker\n                :currencies=\"fromArray\"\n                :override-currency=\"overrideFrom\"\n                :from-source=\"true\"\n                page=\"SwapContainerFrom\"\n                @selectedCurrency=\"setFromCurrency\"\n              />\n              <div class=\"the-form amount-number\">\n                <input\n                  v-model=\"fromValue\"\n                  type=\"number\"\n                  name\n                  value\n                  step=\"any\"\n                  placeholder=\"Deposit Amount\"\n                  @input=\"amountChanged('from')\"\n                />\n              </div>\n              <div class=\"error-message-container\">\n                <p v-if=\"fromBelowMinAllowed\">{{ fromBelowMinAllowed }}</p>\n                <p v-if=\"!hasEnough && !fromBelowMinAllowed\">\n                  {{ $t('common.dontHaveEnough') }}\n                </p>\n                <p v-if=\"fromAboveMaxAllowed\">{{ fromAboveMaxAllowed }}</p>\n              </div>\n            </div>\n            <div class=\"exchange-icon\" @click=\"flipCurrencies\">\n              <img :src=\"images.swap\" />\n            </div>\n            <div class=\"amount\">\n              <div class=\"title\">\n                <h4>{{ $t('common.to') }}</h4>\n              </div>\n              <swap-currency-picker\n                :currencies=\"toArray\"\n                :override-currency=\"overrideTo\"\n                :from-source=\"false\"\n                page=\"SwapContainerTo\"\n                @selectedCurrency=\"setToCurrency\"\n              />\n              <div class=\"the-form amount-number\">\n                <input\n                  v-model=\"toValue\"\n                  type=\"number\"\n                  name\n                  value\n                  step=\"any\"\n                  placeholder=\"Received Amount\"\n                  @input=\"amountChanged('to')\"\n                />\n              </div>\n              <div class=\"error-message-container\">\n                <p v-if=\"toBelowMinAllowed\">{{ toBelowMinAllowed }}</p>\n                <p v-if=\"toAboveMaxAllowed\">{{ toAboveMaxAllowed }}</p>\n              </div>\n            </div>\n          </div>\n          <!-- form-block amount-to-address -->\n        </div>\n\n        <div v-show=\"!isExitToFiat\" class=\"send-form\">\n          <div class=\"the-form gas-amount\">\n            <drop-down-address-selector\n              :currency=\"toCurrency\"\n              :current-address=\"currentAddress\"\n              :copybutton=\"true\"\n              :title=\"$t('common.toAddress')\"\n              @toAddress=\"setToAddress\"\n              @validAddress=\"validAddress = $event\"\n              @unableToValidate=\"unableToValidate = $event\"\n            />\n          </div>\n          <div v-show=\"!validAddress\" class=\"error-message-container\">\n            <p>{{ $t('interface.notValidAddr', { currency: toCurrency }) }}</p>\n          </div>\n          <div v-show=\"unableToValidate\" class=\"warn-message-container\">\n            <p>\n              {{\n                $t('interface.unableToValidateAddress', {\n                  currency: toCurrency\n                })\n              }}\n            </p>\n          </div>\n        </div>\n\n        <div\n          v-show=\"isExitToFiat && fromCurrency !== baseCurrency\"\n          class=\"send-form\"\n        >\n          <div class=\"the-form gas-amount\">\n            <drop-down-address-selector\n              :currency=\"fromCurrency\"\n              :current-address=\"currentAddress\"\n              :copybutton=\"true\"\n              :title=\"$t('interface.fromAddr')\"\n              @toAddress=\"setExitFromAddress\"\n              @validAddress=\"validExitAddress = $event\"\n              @unableToValidate=\"unableToValidateExit = $event\"\n            />\n          </div>\n          <div v-show=\"!validExitAddress\" class=\"error-message-container\">\n            <p>\n              {{ $t('interface.notValidAddrSrc', { currency: fromCurrency }) }}\n            </p>\n          </div>\n          <div v-show=\"unableToValidateExit\" class=\"warn-message-container\">\n            <p>\n              {{\n                $t('interface.unableToValidateAddress', {\n                  currency: toCurrency\n                })\n              }}\n            </p>\n          </div>\n        </div>\n\n        <div v-show=\"showRefundAddress\" class=\"send-form\">\n          <div class=\"the-form gas-amount\">\n            <drop-down-address-selector\n              :currency=\"fromCurrency\"\n              :current-address=\"currentAddress\"\n              :copybutton=\"true\"\n              :title=\"$t('interface.refund', { currency: fromCurrency })\"\n              @toAddress=\"setRefundAddress\"\n              @validAddress=\"validRefundAddress = $event\"\n              @unableToValidate=\"unableToValidateRefund = $event\"\n            />\n          </div>\n          <div v-show=\"!validRefundAddress\" class=\"error-message-container\">\n            <p>\n              {{ $t('interface.notValidAddr', { currency: fromCurrency }) }}\n            </p>\n          </div>\n          <div v-show=\"unableToValidateRefund\" class=\"warn-message-container\">\n            <p>\n              {{\n                $t('interface.unableToValidateAddress', {\n                  currency: toCurrency\n                })\n              }}\n            </p>\n          </div>\n        </div>\n\n        <div class=\"send-form\">\n          <div class=\"title-container\">\n            <div class=\"title title-and-copy\">\n              <h4>{{ $t('interface.providers') }}</h4>\n            </div>\n          </div>\n          <providers-radio-selector\n            :loading-provider-error=\"loadingError\"\n            :loading-provider-rates=\"!haveProviderRates\"\n            :provider-data=\"providerList\"\n            :from-value=\"+fromValue\"\n            :to-value=\"+toValue\"\n            :no-providers-pair=\"noProvidersPair\"\n            :loading-data=\"loadingData\"\n            :providers-found=\"providersFound\"\n            :provider-selected=\"selectedProvider\"\n            :switch-currency-order=\"switchCurrencyOrder\"\n            :all-supported-providers=\"supportedProviders\"\n            @selectedProvider=\"setSelectedProvider\"\n          />\n        </div>\n\n        <div class=\"submit-button-container\">\n          <div\n            v-show=\"finalizingSwap\"\n            class=\"disabled submit-button large-round-button-green-filled clickable\"\n          >\n            <i class=\"fa fa-spinner fa-spin\" />\n            {{ $t('interface.swapButtonLoading') }}\n          </div>\n          <div\n            v-show=\"!finalizingSwap\"\n            :class=\"[\n              validSwap ? '' : 'disabled',\n              'submit-button large-round-button-green-filled clickable'\n            ]\"\n            @click=\"swapConfirmationModalOpen\"\n          >\n            {{ $t('common.continue') }}\n            <i class=\"fa fa-long-arrow-right\" aria-hidden=\"true\" />\n          </div>\n          <interface-bottom-text\n            :link-text=\"$t('interface.helpCenter')\"\n            :question=\"$t('interface.haveIssues')\"\n            link=\"https://kb.myetherwallet.com\"\n          />\n        </div>\n      </div>\n    </div>\n    <swap-exit-to-fiat\n      v-if=\"bityExitToFiat\"\n      :swap-details=\"swapDetails\"\n      :exit-from-address=\"exitSourceAddress\"\n      :exit-to-fiat-callback=\"exitToFiatCallback\"\n      @backButtonClick=\"exitToFiatAbort\"\n    ></swap-exit-to-fiat>\n  </div>\n</template>\n<script>\nimport BigNumber from 'bignumber.js';\nimport debug from 'debug';\nimport { mapState } from 'vuex';\n\nimport { Toast } from '@/helpers';\nimport ProvidersRadioSelector from './components/ProvidersRadioSelector';\nimport DropDownAddressSelector from './components/SwapAddressSelector';\nimport InterfaceBottomText from '@/components/InterfaceBottomText';\nimport InterfaceContainerTitle from '../../components/InterfaceContainerTitle';\nimport swapIcon from '@/assets/images/icons/swap.svg';\nimport ImageKybernetowrk from '@/assets/images/etc/kybernetwork.png';\nimport ImageBity from '@/assets/images/etc/bity.png';\nimport ImageVisaMaster from '@/assets/images/etc/visamaster.png';\n\nimport SwapCurrencyPicker from './components/SwapCurrencyPicker';\nimport SwapConfirmationModal from './components/SwapConfirmationModal';\nimport SwapExitToFiat from './components/SwapExitToFiat';\nimport SwapSendToModal from './components/SwapSendToModal';\n\nimport {\n  SwapProviders,\n  providers,\n  bestProviderForQuantity,\n  bestRateForQuantity,\n  isValidEntry,\n  providerNames,\n  supportedProviders,\n  BASE_CURRENCY,\n  fiat,\n  MIN_SWAP_AMOUNT,\n  ERC20\n} from '@/partners';\n\nconst errorLogger = debug('v5:swapContainer');\nimport SwapSendForm from './components/SwapExitToFiat';\n\nexport default {\n  components: {\n    'interface-bottom-text': InterfaceBottomText,\n    'interface-container-title': InterfaceContainerTitle,\n    'swap-currency-picker': SwapCurrencyPicker,\n    'drop-down-address-selector': DropDownAddressSelector,\n    'providers-radio-selector': ProvidersRadioSelector,\n    'swap-confirmation-modal': SwapConfirmationModal,\n    'swap-exit-to-fiat': SwapExitToFiat,\n    'swap-send-form': SwapSendForm,\n    'swap-send-to-modal': SwapSendToModal\n  },\n  props: {\n    tokensWithBalance: {\n      type: Array,\n      default: function() {\n        return [];\n      }\n    }\n  },\n  data() {\n    return {\n      baseCurrency: BASE_CURRENCY,\n      toAddress: '',\n      currentAddress: '',\n      refundAddress: '',\n      exitFromAddress: '',\n      fromCurrency: 'ETH',\n      toCurrency: 'ETH',\n      displayToValue: 1,\n      displayFromValue: 1,\n      fromValue: 1,\n      toValue: 1,\n      invalidFrom: 'none',\n      lastBestRate: 0,\n      selectedProvider: {},\n      swapDetails: {},\n      currencyDetails: {},\n      swap: new SwapProviders(\n        providers,\n        {\n          network: this.$store.state.network.type.name,\n          web3: this.$store.state.web3,\n          getRateForUnit: false\n        },\n        { tokensWithBalance: this.tokensWithBalance }\n      ),\n      images: {\n        kybernetowrk: ImageKybernetowrk,\n        bity: ImageBity,\n        visaMaster: ImageVisaMaster,\n        swap: swapIcon\n      },\n      toArray: [],\n      fromArray: [],\n      providerData: [],\n      tokenBalances: {},\n      providerRatesRecieved: [],\n      noProvidersPair: {},\n      providersFound: [],\n      tempStatuses: [],\n      overrideFrom: {},\n      overrideTo: {},\n      providerNames: providerNames,\n      supportedProviders: supportedProviders,\n      fiatCurrenciesArray: fiat.map(entry => entry.symbol),\n      finalizingSwap: false,\n      validAddress: true,\n      validRefundAddress: true,\n      validExitAddress: true,\n      ratesRetrived: false,\n      issueRecievingRates: false,\n      loadingData: true,\n      haveProviderRates: false,\n      loadingError: false,\n      switchCurrencyOrder: false,\n      bityExitToFiat: false,\n      exitToFiatCallback: () => {},\n      debounceUpdateEstimate: {},\n      debounceDoThing: {},\n      unableToValidate: false,\n      unableToValidateExit: false,\n      unableToValidateRefund: false\n    };\n  },\n  computed: {\n    ...mapState(['account', 'ens', 'gasPrice', 'web3', 'network']),\n    bestRate() {\n      try {\n        if (this.providerData.length > 0) {\n          if (this.selectedProvider.provider) {\n            return this.providerList.find(entry => {\n              return entry.provider === this.selectedProvider.provider;\n            }).rate;\n          }\n          return bestRateForQuantity([...this.providerList], this.fromValue);\n        }\n        return this.lastBestRate;\n      } catch (e) {\n        errorLogger(e);\n      }\n    },\n    fromBelowMinAllowed() {\n      if (new BigNumber(MIN_SWAP_AMOUNT).gt(new BigNumber(this.fromValue)))\n        return `${this.$t('interface.belowMin')} ${MIN_SWAP_AMOUNT}`;\n      if (\n        new BigNumber(this.selectedProvider.minValue).gt(\n          new BigNumber(this.fromValue)\n        )\n      )\n        return this.$t('interface.belowMin', {\n          value: this.selectedProvider.maxValue,\n          currency: this.fromCurrency\n        });\n      return false;\n    },\n    fromAboveMaxAllowed() {\n      if (this.selectedProvider.provider === this.providerNames.bity) {\n        if (this.checkBityMax) {\n          return this.$t('interface.aboveMax', {\n            value: this.selectedProvider.maxValue,\n            currency: this.fromCurrency\n          });\n        }\n        return false;\n      } else if (\n        new BigNumber(this.fromValue).gt(\n          new BigNumber(this.selectedProvider.maxValue)\n        ) &&\n        new BigNumber(this.selectedProvider.maxValue).gt(new BigNumber(0))\n      )\n        return this.$t('interface.aboveMaxSwap', {\n          value: this.selectedProvider.maxValue,\n          currency: this.fromCurrency\n        });\n      return false;\n    },\n    toBelowMinAllowed() {\n      if (new BigNumber(0).gte(new BigNumber(this.toValue)))\n        return this.$t('interface.belowMinGeneral');\n      return false;\n    },\n    toAboveMaxAllowed() {\n      if (this.checkBityMax) return this.$t('interface.aboveMaxGeneral');\n      return false;\n    },\n    providerList() {\n      if (this.providerData.length > 0) {\n        return bestProviderForQuantity([...this.providerData], this.fromValue);\n      }\n      return [];\n    },\n    isExitToFiat() {\n      return this.fiatCurrenciesArray.includes(this.toCurrency);\n    },\n    validSwap() {\n      // initial chack.  will provide an alert on the next screen if no address is provided\n      const canExit =\n        this.isExitToFiat && this.fromCurrency !== this.baseCurrency\n          ? this.exitFromAddress !== ''\n          : true;\n      return (\n        this.hasEnough &&\n        (this.toAddress !== '' || canExit) &&\n        this.allAddressesValid &&\n        this.selectedProvider.minValue <= +this.fromValue &&\n        (+this.fromValue <= this.selectedProvider.maxValue ||\n          this.selectedProvider.maxValue === 0)\n      );\n    },\n    checkBityMax() {\n      if (this.swap.isProvider(this.providerNames.bity)) {\n        return (\n          !this.swap\n            .getProvider(this.providerNames.bity)\n            .maxCheck(\n              this.fromCurrency,\n              this.fromValue,\n              this.toCurrency,\n              this.toValue\n            ) && this.selectedProvider.provider === this.providerNames.bity\n        );\n      }\n      return false;\n    },\n    showRefundAddress() {\n      return (\n        !SwapProviders.isToken(this.fromCurrency) &&\n        this.selectedProvider.provider === this.providerNames.changelly\n      );\n    },\n    allAddressesValid() {\n      const validBaseToAddress = this.toAddress !== '' && this.validAddress;\n\n      if (this.isExitToFiat) {\n        if (this.fromCurrency === this.baseCurrency) {\n          return true;\n        }\n        return this.exitFromAddress !== '' && this.validExitAddress;\n      }\n      if (this.showRefundAddress) {\n        if (\n          this.fromCurrency === this.baseCurrency ||\n          SwapProviders.isToken(this.fromCurrency)\n        ) {\n          const validRefundAddress =\n            this.refundAddress === '' && this.validRefundAddress;\n          return validBaseToAddress && validRefundAddress;\n        }\n        return SwapProviders.checkAddress(\n          this.refundAddress,\n          this.fromCurrency\n        );\n      }\n\n      return validBaseToAddress;\n    },\n    hasEnough() {\n      if (\n        SwapProviders.isToken(this.fromCurrency) &&\n        this.fromCurrency !== this.baseCurrency\n      ) {\n        const enteredVal = this.swap.convertToTokenWei(\n          this.fromCurrency,\n          this.fromValue\n        );\n\n        return new BigNumber(this.tokenBalances[this.fromCurrency]).gte(\n          new BigNumber(enteredVal)\n        );\n      } else if (this.fromCurrency === this.baseCurrency) {\n        const enteredVal = this.swap.convertToTokenWei(\n          this.fromCurrency,\n          this.fromValue\n        );\n        return new BigNumber(this.account.balance).gt(\n          new BigNumber(enteredVal)\n        );\n      }\n      return true;\n    },\n    exitSourceAddress() {\n      return this.isExitToFiat && this.fromCurrency === this.baseCurrency\n        ? this.currentAddress\n        : this.exitFromAddress;\n    }\n  },\n  watch: {\n    ['this.network.type.name']() {\n      this.swap.updateNetwork(this.network.type.name);\n    },\n    ['swap.updateProviderRates']() {\n      const { toArray, fromArray } = this.swap.initialCurrencyLists;\n      this.toArray = toArray;\n      this.fromArray = fromArray;\n    },\n    ['swap.haveProviderRates']() {\n      this.haveProviderRates = this.swap.haveProviderRates;\n      const { toArray, fromArray } = this.swap.buildInitialCurrencyArrays();\n      this.toArray = toArray;\n      this.fromArray = fromArray;\n      this.lastBestRate = bestRateForQuantity(\n        [...this.providerList],\n        this.fromValue\n      );\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        'from'\n      );\n    },\n    network(newVal) {\n      this.providerData = [];\n      this.haveProviderRates = false;\n      this.loadingData = false;\n      this.swap = new SwapProviders(providers, {\n        network: newVal.type.name,\n        web3: this.web3\n      });\n    }\n  },\n  mounted() {\n    const { toArray, fromArray } = this.swap.initialCurrencyLists;\n    this.toArray = toArray;\n    this.fromArray = fromArray;\n    this.currentAddress = this.account.address;\n    this.debounceUpdateEstimate = this.web3.utils._.debounce(\n      this.updateEstimate,\n      300\n    );\n    this.debounceReviseRateEstimate = this.web3.utils._.debounce(\n      this.updateRateEstimate,\n      2000\n    );\n  },\n  methods: {\n    reset() {\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        'from'\n      );\n      this.finalizingSwap = false;\n      this.validAddress = true;\n      this.issueRecievingRates = false;\n      this.loadingError = false;\n      this.switchCurrencyOrder = false;\n      this.bityExitToFiat = false;\n    },\n    flipCurrencies() {\n      this.switchCurrencyOrder = true;\n      const origTo = this.toValue;\n      this.fromCurrency = this.currencyDetails.to.symbol;\n      this.toCurrency = this.currencyDetails.from.symbol;\n      this.overrideFrom = this.currencyDetails.to;\n      this.overrideTo = this.currencyDetails.from;\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        origTo,\n        'from'\n      );\n      this.switchCurrencyOrder = false;\n    },\n    setSelectedProvider(provider) {\n      this.selectedProvider = this.providerList.find(entry => {\n        return entry.provider === provider;\n      });\n      this.updateEstimate('from');\n    },\n    setToAddress(address) {\n      this.toAddress = address;\n    },\n    setRefundAddress(address) {\n      this.refundAddress = address;\n    },\n    setExitFromAddress(address) {\n      this.exitFromAddress = address;\n    },\n    swapAll() {\n      this.fromValue = this.swap.convertToTokenBase(\n        this.fromCurrency,\n        this.tokenBalances[this.fromCurrency]\n      );\n      this.amountChanged('from');\n    },\n    setFromCurrency(value, dir = 'from') {\n      this.currencyDetails.from = value;\n      this.fromCurrency = value.symbol;\n      this.getBalance(this.fromCurrency);\n      this.toArray = this.swap.setToCurrencyBuilder(value);\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        dir\n      );\n    },\n    setToCurrency(value, dir = 'to') {\n      this.currencyDetails.to = value;\n      this.toCurrency = value.symbol;\n      this.fromArray = this.swap.setFromCurrencyBuilder(value);\n      this.updateRateEstimate(\n        this.fromCurrency,\n        this.toCurrency,\n        this.fromValue,\n        dir\n      );\n    },\n    async getBalance(currency) {\n      if (SwapProviders.isToken(currency) && currency !== this.baseCurrency) {\n        const balance = await new this.web3.eth.Contract(\n          ERC20,\n          this.swap.getTokenAddress(currency)\n        ).methods\n          .balanceOf(this.currentAddress)\n          .call();\n\n        this.$set(this.tokenBalances, currency, balance);\n      }\n    },\n    amountChanged(direction) {\n      if (\n        (isValidEntry(this.fromValue) && direction === 'from') ||\n        (isValidEntry(this.toValue) && direction === 'to')\n      ) {\n        if (\n          this.swap.getProvider(this.providerNames.simplex).currencies.fiat[\n            this.fromCurrency\n          ]\n        ) {\n          this.debounceUpdateEstimate(this.providerNames.simplex + direction);\n        } else {\n          this.debounceUpdateEstimate(direction);\n          const fromCur = this.fromCurrency;\n          const toCur = this.toCurrency;\n          const fromVal = this.fromValue;\n          this.debounceReviseRateEstimate(fromCur, toCur, fromVal, direction);\n        }\n      }\n    },\n    async updateEstimate(input) {\n      if (this.simplexUpdate) {\n        this.simplexUpdate = false;\n        return;\n      }\n      let fromValue, toValue, simplexProvider, simplexRateDetails;\n      switch (input) {\n        case 'to':\n          this.fromValue = this.swap.calculateFromValue(\n            this.toValue,\n            this.bestRate,\n            this.fromCurrency\n          );\n          break;\n        case 'from':\n          this.toValue = this.swap.calculateToValue(\n            this.fromValue,\n            this.bestRate,\n            this.toCurrency\n          );\n          break;\n        case `${this.providerNames.simplex}to`:\n          this.simplexUpdate = true;\n          simplexProvider = this.swap.getProvider(this.providerNames.simplex);\n\n          if (simplexProvider.canQuote(this.fromValue, this.toValue)) {\n            simplexRateDetails = await simplexProvider.updateDigital(\n              this.fromCurrency,\n              this.toCurrency,\n              this.toValue\n            );\n\n            this.fromValue = simplexRateDetails.fromValue;\n            this.toValue = simplexRateDetails.toValue;\n          } else {\n            simplexRateDetails = await simplexProvider.updateFiat(\n              this.fromCurrency,\n              this.toCurrency,\n              51\n            );\n\n            const rate = new BigNumber(simplexRateDetails.toValue)\n              .div(simplexRateDetails.fromValue)\n              .toString(10);\n\n            this.fromValue = this.swap.calculateFromValue(\n              this.toValue,\n              rate,\n              this.fromCurrency\n            );\n          }\n\n          break;\n        case `${this.providerNames.simplex}from`:\n          this.simplexUpdate = true;\n          simplexProvider = this.swap.getProvider(this.providerNames.simplex);\n          if (simplexProvider.canQuote(this.fromValue, this.toValue)) {\n            simplexRateDetails = await simplexProvider.updateFiat(\n              this.fromCurrency,\n              this.toCurrency,\n              this.fromValue\n            );\n\n            this.fromValue = simplexRateDetails.fromValue;\n            this.toValue = simplexRateDetails.toValue;\n          } else {\n            simplexRateDetails = await simplexProvider.updateFiat(\n              this.fromCurrency,\n              this.toCurrency,\n              51\n            );\n\n            const rate = new BigNumber(simplexRateDetails.toValue)\n              .div(simplexRateDetails.fromValue)\n              .toString(10);\n\n            this.toValue = this.swap.calculateToValue(this.fromValue, rate);\n          }\n\n          break;\n        default:\n          toValue = this.swap.calculateToValue(this.fromValue, this.bestRate);\n          fromValue = this.swap.calculateFromValue(this.toValue, this.bestRate);\n          this.toValue = toValue;\n          this.fromValue = fromValue;\n          break;\n      }\n    },\n    async updateRateEstimate(fromCurrency, toCurrency, fromValue, to) {\n      if (this.haveProviderRates) {\n        this.loadingData = true;\n        this.noProvidersPair = { fromCurrency, toCurrency };\n        this.selectedProvider = {}; // Reset the selected provider when new rate pair is choosen\n        this.providerData = [];\n        const {\n          providersFound,\n          callsToMake\n        } = await this.swap.updateRateEstimate(\n          fromCurrency,\n          toCurrency,\n          fromValue,\n          this.toValue\n        );\n        this.providersFound = providersFound;\n        const results = await Promise.all(\n          callsToMake.map(func =>\n            func(fromCurrency, toCurrency, fromValue, this.toValue)\n          )\n        );\n        this.loadingData = false;\n        if (\n          results.every(\n            entry =>\n              entry.fromCurrency === this.fromCurrency &&\n              entry.toCurrency === this.toCurrency\n          )\n        ) {\n          this.providerData = bestProviderForQuantity(\n            results.map(entry => {\n              if (+entry.rate > 0) {\n                return {\n                  provider: entry.provider,\n                  fromCurrency,\n                  fromValue: this.fromValue,\n                  toCurrency,\n                  rate: +entry.rate,\n                  minValue: entry.minValue || 0,\n                  maxValue: entry.maxValue || 0,\n                  computeConversion: function(_fromValue) {\n                    return new BigNumber(_fromValue)\n                      .times(this.rate)\n                      .toFixed(6)\n                      .toString(10);\n                  }\n                };\n              }\n            }),\n            fromValue\n          );\n          this.updateEstimate(to);\n        }\n      }\n    },\n    async swapConfirmationModalOpen() {\n      try {\n        if (this.validSwap) {\n          this.finalizingSwap = true;\n          const providerDetails = this.providerList.find(entry => {\n            return entry.provider === this.selectedProvider.provider;\n          });\n          const swapDetails = {\n            providerDetails: providerDetails,\n            fromValue: this.fromValue,\n            toValue: this.toValue,\n            toAddress: this.toAddress || this.currentAddress,\n            fromAddress: this.currentAddress,\n            refundAddress: SwapProviders.isToken(providerDetails.fromCurrency)\n              ? this.currentAddress\n              : this.refundAddress,\n            exitFromAddress:\n              this.isExitToFiat && this.fromCurrency === this.baseCurrency\n                ? this.currentAddress\n                : this.exitFromAddress\n          };\n          this.swapDetails = await this.swap.startSwap(swapDetails);\n          this.finalizingSwap = false;\n\n          if (this.swapDetails.isExitToFiat) {\n            this.bityExitToFiat = true;\n            this.exitToFiatCallback = swapDetailsExit => {\n              this.bityExitToFiat = false;\n              this.swapDetails = swapDetailsExit;\n              this.openConfirmModal(this.swapDetails);\n            };\n          } else {\n            this.openConfirmModal(this.swapDetails);\n          }\n        }\n      } catch (e) {\n        //abort (empty response from provider or failure to finalize details)\n        if (e.message === 'abort') {\n          this.finalizingSwap = false;\n          return;\n        }\n        this.$refs.swapConfirmation.$refs.swapconfirmation.hide();\n        this.$refs.swapSendTo.$refs.swapconfirmation.hide();\n        this.finalizingSwap = false;\n        errorLogger(e);\n        Toast.responseHandler(e, false);\n      }\n    },\n    openConfirmModal(swapDetails) {\n      if (swapDetails.dataForInitialization && swapDetails.maybeToken) {\n        this.$refs.swapConfirmation.$refs.swapconfirmation.show();\n      } else if (swapDetails.dataForInitialization && !swapDetails.maybeToken) {\n        this.$refs.swapSendTo.$refs.swapconfirmation.show();\n      } else {\n        throw Error('Error while requesting finalized details from provider');\n      }\n    },\n    exitToFiatAbort() {\n      // get any component state values to temporarily persist, and reset swap state to state before exit to fiat selected.\n      this.bityExitToFiat = !this.bityExitToFiat;\n    },\n    resetSwapState() {\n      this.reset();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'SwapContainer.scss';\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SwapContainer.vue?vue&type=template&id=09dd4c53&scoped=true&\"\nimport script from \"./SwapContainer.vue?vue&type=script&lang=js&\"\nexport * from \"./SwapContainer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SwapContainer.vue?vue&type=style&index=0&id=09dd4c53&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"09dd4c53\",\n  null\n  \n)\n\nexport default component.exports","export { default } from './SwapContainer';\n","import mod from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=style&index=0&id=09dd4c53&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SwapContainer.vue?vue&type=style&index=0&id=09dd4c53&lang=scss&scoped=true&\""],"sourceRoot":""}